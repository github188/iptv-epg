var HtmlWebpackPlugin = require('html-webpack-plugin');
var UglifyJSPlugin = require('uglifyjs-webpack-plugin');
var CleanWebpackPlugin = require('clean-webpack-plugin');
var ExtractTextPlugin = require('extract-text-webpack-plugin');
var webpack = require('webpack');

module.exports = [
    // 1. 丑化js，忽略警告
    // new webpack.optimize.UglifyJsPlugin({
    //     compress: {
    //         warnings: false
    //     }
    // }),

    // 2. 提取公共部分，适用于多页应用
    // new webpack.optimize.CommonsChunkPlugin({
    //     name: 'common',
    //     chunks: ["app", "vendor"]
    // }),

    // 3. 打包html文件
    new HtmlWebpackPlugin({
        title: 'This is a title generated by HtmlWebpackPlugin',
        filename: 'index.html',
        template: 'index.html',
        // true | body to bottom, head to <head>, false
        inject: 'body',
        // page's icon
        favicon: './assets/nice.png',
        // compress html code
        minify: {},
        // true | false 在文件名后面追加hash值，唯一标识符
        hash: true
    }),

    // 4. 清理数组中指定目录
    new CleanWebpackPlugin(['dist']),

    // 5. 内容没发生变化不需要重新打包，特别适用于将第三方库或者不太会变更的代码提取到公共部分
    new webpack.HashedModuleIdsPlugin(),

    // 6. 打包css到指定文件
    new ExtractTextPlugin({
        filename: '[name]_[hash:5].css',
        allChunks: true
    })


    // new webpack.LoaderOptionsPlugin([
    //     {
    //         test: /\.styl$/,
    //         stylus: {
    //             default: {
    //                 use: [poststylus(['autoprefixer', 'rucksack-css'])]
    //             }
    //             // otherConfig, 通过 stylus-loader?config=otherConfig
    //         }
    //     }
    // ])
];
